module testbench();

timeunit 10ns;	// Half clock cycle at 50 MHz
			// This is the amount of time represented by #1
timeprecision 1ns;

// These signals are internal because the processor will be
// instantiated as a submodule in testbench.
logic Clk = 0;
logic Reset, frame_clk, 
					//input [7:0] keycode,
					logic a_enable, s_enable, d_enable, r_enable, newShape;
					logic [9:0]x, y;
               logic [9:0]  BallX, BallY, BallS;

ball boi(.*);
// To store expected results

// A counter to count the instances where simulation results
// do no match with expected results

// Instantiating the DUT
// Make sure the module and signal names match with those in your design


// Toggle the clock
// #1 means wait for a delay of 1 timeunit



always begin : CLOCK_GENERATION
#1 Clk = ~Clk;
end

initial begin: CLOCK_INITIALIZATION
    Clk = 0;
end

// Testing begins here
// The initial block is not synthesizable
// Everything happens sequentially inside an initial block
// as in a software program
initial begin: TEST_VECTORS
#0 Reset = 0;
#2 Reset = 1;
#2 Reset = 0;

#3 a_enable = 0;
#3 s_enable = 0;
#3 d_enable = 0;
#3 r_enable = 0;
#3 newShape = 0;
#1 newShape = 1;
#1 newShape = 0;




end
endmodule